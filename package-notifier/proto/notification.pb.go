// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/notification.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// PackageStatus represents the current status of a package
type PackageStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PackageId     string                 `protobuf:"bytes,1,opt,name=package_id,json=packageId,proto3" json:"package_id,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Location      string                 `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
	Timestamp     string                 `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Description   string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PackageStatus) Reset() {
	*x = PackageStatus{}
	mi := &file_proto_notification_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PackageStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackageStatus) ProtoMessage() {}

func (x *PackageStatus) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackageStatus.ProtoReflect.Descriptor instead.
func (*PackageStatus) Descriptor() ([]byte, []int) {
	return file_proto_notification_proto_rawDescGZIP(), []int{0}
}

func (x *PackageStatus) GetPackageId() string {
	if x != nil {
		return x.PackageId
	}
	return ""
}

func (x *PackageStatus) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PackageStatus) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *PackageStatus) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *PackageStatus) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// NotificationRequest is sent when a package status changes
type NotificationRequest struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Status               *PackageStatus         `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	NotificationChannels []string               `protobuf:"bytes,2,rep,name=notification_channels,json=notificationChannels,proto3" json:"notification_channels,omitempty"` // e.g., "email", "sms"
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *NotificationRequest) Reset() {
	*x = NotificationRequest{}
	mi := &file_proto_notification_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationRequest) ProtoMessage() {}

func (x *NotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationRequest.ProtoReflect.Descriptor instead.
func (*NotificationRequest) Descriptor() ([]byte, []int) {
	return file_proto_notification_proto_rawDescGZIP(), []int{1}
}

func (x *NotificationRequest) GetStatus() *PackageStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *NotificationRequest) GetNotificationChannels() []string {
	if x != nil {
		return x.NotificationChannels
	}
	return nil
}

// NotificationResponse is the response to a notification request
type NotificationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NotificationResponse) Reset() {
	*x = NotificationResponse{}
	mi := &file_proto_notification_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationResponse) ProtoMessage() {}

func (x *NotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationResponse.ProtoReflect.Descriptor instead.
func (*NotificationResponse) Descriptor() ([]byte, []int) {
	return file_proto_notification_proto_rawDescGZIP(), []int{2}
}

func (x *NotificationResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *NotificationResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetHistoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PackageId     string                 `protobuf:"bytes,1,opt,name=package_id,json=packageId,proto3" json:"package_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetHistoryRequest) Reset() {
	*x = GetHistoryRequest{}
	mi := &file_proto_notification_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHistoryRequest) ProtoMessage() {}

func (x *GetHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHistoryRequest.ProtoReflect.Descriptor instead.
func (*GetHistoryRequest) Descriptor() ([]byte, []int) {
	return file_proto_notification_proto_rawDescGZIP(), []int{3}
}

func (x *GetHistoryRequest) GetPackageId() string {
	if x != nil {
		return x.PackageId
	}
	return ""
}

type NotificationHistory struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Statuses      []*PackageStatus       `protobuf:"bytes,1,rep,name=statuses,proto3" json:"statuses,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NotificationHistory) Reset() {
	*x = NotificationHistory{}
	mi := &file_proto_notification_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotificationHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationHistory) ProtoMessage() {}

func (x *NotificationHistory) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationHistory.ProtoReflect.Descriptor instead.
func (*NotificationHistory) Descriptor() ([]byte, []int) {
	return file_proto_notification_proto_rawDescGZIP(), []int{4}
}

func (x *NotificationHistory) GetStatuses() []*PackageStatus {
	if x != nil {
		return x.Statuses
	}
	return nil
}

var File_proto_notification_proto protoreflect.FileDescriptor

const file_proto_notification_proto_rawDesc = "" +
	"\n" +
	"\x18proto/notification.proto\x12\fnotification\"\xa2\x01\n" +
	"\rPackageStatus\x12\x1d\n" +
	"\n" +
	"package_id\x18\x01 \x01(\tR\tpackageId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x1a\n" +
	"\blocation\x18\x03 \x01(\tR\blocation\x12\x1c\n" +
	"\ttimestamp\x18\x04 \x01(\tR\ttimestamp\x12 \n" +
	"\vdescription\x18\x05 \x01(\tR\vdescription\"\x7f\n" +
	"\x13NotificationRequest\x123\n" +
	"\x06status\x18\x01 \x01(\v2\x1b.notification.PackageStatusR\x06status\x123\n" +
	"\x15notification_channels\x18\x02 \x03(\tR\x14notificationChannels\"J\n" +
	"\x14NotificationResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"2\n" +
	"\x11GetHistoryRequest\x12\x1d\n" +
	"\n" +
	"package_id\x18\x01 \x01(\tR\tpackageId\"N\n" +
	"\x13NotificationHistory\x127\n" +
	"\bstatuses\x18\x01 \x03(\v2\x1b.notification.PackageStatusR\bstatuses2\xd5\x01\n" +
	"\x13NotificationService\x12^\n" +
	"\x13NotifyPackageStatus\x12!.notification.NotificationRequest\x1a\".notification.NotificationResponse\"\x00\x12^\n" +
	"\x16GetNotificationHistory\x12\x1f.notification.GetHistoryRequest\x1a!.notification.NotificationHistory\"\x00B9Z7github.com/snavarro/microtracker/package-notifier/protob\x06proto3"

var (
	file_proto_notification_proto_rawDescOnce sync.Once
	file_proto_notification_proto_rawDescData []byte
)

func file_proto_notification_proto_rawDescGZIP() []byte {
	file_proto_notification_proto_rawDescOnce.Do(func() {
		file_proto_notification_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_notification_proto_rawDesc), len(file_proto_notification_proto_rawDesc)))
	})
	return file_proto_notification_proto_rawDescData
}

var file_proto_notification_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_proto_notification_proto_goTypes = []any{
	(*PackageStatus)(nil),        // 0: notification.PackageStatus
	(*NotificationRequest)(nil),  // 1: notification.NotificationRequest
	(*NotificationResponse)(nil), // 2: notification.NotificationResponse
	(*GetHistoryRequest)(nil),    // 3: notification.GetHistoryRequest
	(*NotificationHistory)(nil),  // 4: notification.NotificationHistory
}
var file_proto_notification_proto_depIdxs = []int32{
	0, // 0: notification.NotificationRequest.status:type_name -> notification.PackageStatus
	0, // 1: notification.NotificationHistory.statuses:type_name -> notification.PackageStatus
	1, // 2: notification.NotificationService.NotifyPackageStatus:input_type -> notification.NotificationRequest
	3, // 3: notification.NotificationService.GetNotificationHistory:input_type -> notification.GetHistoryRequest
	2, // 4: notification.NotificationService.NotifyPackageStatus:output_type -> notification.NotificationResponse
	4, // 5: notification.NotificationService.GetNotificationHistory:output_type -> notification.NotificationHistory
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_proto_notification_proto_init() }
func file_proto_notification_proto_init() {
	if File_proto_notification_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_notification_proto_rawDesc), len(file_proto_notification_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_notification_proto_goTypes,
		DependencyIndexes: file_proto_notification_proto_depIdxs,
		MessageInfos:      file_proto_notification_proto_msgTypes,
	}.Build()
	File_proto_notification_proto = out.File
	file_proto_notification_proto_goTypes = nil
	file_proto_notification_proto_depIdxs = nil
}

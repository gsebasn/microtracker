version: '3.8'

services:
  localstack:
    container_name: localstack-sns
    image: localstack/localstack:latest
    environment:
      - SERVICES=sns
      - DEBUG=1
      - DOCKER_HOST=unix:///var/run/docker.sock
      - DEFAULT_REGION=us-east-1
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - HOSTNAME_EXTERNAL=localstack
      - DISABLE_CORS_CHECKS=1
      - ALLOW_CORS_ORIGIN=*
    ports:
      - "4566:4566"  # LocalStack main endpoint
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4566/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  messenger:
    build:
      context: ./messenger
      dockerfile: Dockerfile
    environment:
      - DD_API_KEY=${DD_API_KEY}
      - DD_ENV=${DD_ENV}
      - DD_SERVICE=${DD_SERVICE}
      - DD_VERSION=${DD_VERSION}
      - DD_AGENT_HOST=datadog-agent
      - DD_TRACE_AGENT_PORT=8126
      - DD_DOGSTATSD_PORT=8125
    ports:
      - "8080:8080"
    networks:
      - loki-network
    depends_on:
      - datadog-agent
      - loki

  datadog-agent:
    image: datadog/agent:latest
    environment:
      - DD_API_KEY=${DD_API_KEY}
      - DD_APM_ENABLED=true
      - DD_APM_NON_LOCAL_TRAFFIC=true
      - DD_LOGS_ENABLED=true
      - DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL=true
      - DD_PROCESS_AGENT_ENABLED=true
      - DD_DOGSTATSD_NON_LOCAL_TRAFFIC=true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    ports:
      - "8126:8126"  # APM
      - "8125:8125/udp"  # DogStatsD
    networks:
      - loki-network

  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - loki-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    volumes:
      - grafana-storage:/var/lib/grafana
    networks:
      - loki-network
    depends_on:
      - loki

  promtail:
    image: grafana/promtail:latest
    volumes:
      - /var/log:/var/log
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    command: -config.file=/etc/promtail/config.yml
    networks:
      - loki-network
    depends_on:
      - loki

volumes:
  grafana-storage:

networks:
  loki-network:
    driver: bridge
